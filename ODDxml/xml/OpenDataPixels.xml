<lccdd>

  <readouts>
    <readout name="PixelBarrelReadout">
      <segmentation type="CartesianGridXY" grid_size_x="0.05*mm" grid_size_y="0.05*mm"/>
      <id>system:4,layer:4,stave:8,module:4,sensor:1,x:24:-12,y:-12</id>
    </readout>
    <readout name="PixelEndcapReadout">
      <segmentation type="CartesianGridXY" grid_size_x="0.05*mm" grid_size_y="0.05*mm"/>
      <id>system:4,layer:4,ring:2,module:8,sensor:2,x:24:-12,y:-12</id>
    </readout>
  </readouts>

  <define>
    <!-- Overall pixel material binning-->
    <constant name="pix_p_mat_b_z" value="200"/>
    <constant name="pix_p_mat_b_phi" value="144"/>
    <!-- Pixel endcap surface & material binning: setting -->
    <constant name="pix_e_v_dz" value="20.*mm"/>
    <constant name="pix_e_sf_b" value="2"/>
    <constant name="pix_e_sf_b_r" value="2"/>
    <constant name="pix_e_sf_e_r" value="1"/>
    <constant name="pix_e_sf_b_phi" value="36"/>
    <constant name="pix_e_sf_e_phi" value="1"/>
    <constant name="pix_e_mat_b_r" value="50"/>
    <constant name="pix_e_mat_b_phi" value="144"/>
    <!-- Pixel barrel surface & material binning: setting -->
    <constant name="pix_b_sf_b" value="2"/>
    <constant name="pix_b_sf_b_z" value="14"/>
    <constant name="pix_b_sf_e_z" value="1"/>
    <constant name="pix_b_clear" value="1.*mm"/>
    <constant name="pix_b_sf_e_phi" value="1"/>
    <constant name="pix_b0_sf_b_phi" value="16"/>
    <constant name="pix_b1_sf_b_phi" value="32"/>
    <constant name="pix_b2_sf_b_phi" value="52"/>
    <constant name="pix_b3_sf_b_phi" value="78"/>
    <constant name="pix_b_mat_b_r" value="50"/>
    <constant name="pix_b_mat_b_z" value="200"/>
    <constant name="pix_b_mat_b_phi" value="144"/>
  </define>

  <!--- define the pixel detector container -->
  <detectors>
    <detector id="ODD_Pixel_ID" name="Pixels" type="DD4hep_SubdetectorAssembly" vis="invisible">
      <shape name="PixelVolume" type="Tube" rmin="pix_env_rmin" rmax="pix_env_rmax" dz="pix_env_dz" material="Air"/>
      <composite name="PixelEndcapN"/>
      <composite name="PixelBarrel"/>
      <composite name="PixelEndcapP"/>
    </detector>
  </detectors>

  <detectors>
    <!--EndcapN-->
    <detector id="ODD_PixelEndcapN_ID" name="PixelEndcapN" type="ODDPixelEndcap" readout="PixelEndcapReadout" vis="invisible">
      <type_flags type="DetType_TRACKER + DetType_ENDCAP"/>
      <dimensions name="PixelEndcapShape" rmin="pix_env_rmin" rmax="pix_env_rmax" dz="pix_e_dz" z="pix_e_nz"/>
      <ring id="0" r="76.*mm" nphi="24" z_offset="3.5*mm" phi0="0." gap="0.6*mm" vis="invisible">
        <module name="PixelEndcapModule" vis="invisible">
          <module_component name="Sensor" alpha="0." x1="8.5*mm" x2="14.5*mm" length="34.*mm" thickness="0.125*mm" x_offset="0." y_offset="-0.03" z_offset="0.*mm" material="Silicon" vis="Silicon" sensitive="true"/>
          <module_component name="Board" alpha="0." x1="8.5*mm" x2="14.5*mm" length="34.*mm" thickness="0.25*mm" x_offset="0." y_offset="0." z_offset="0.*mm" material="Kapton" vis="Kapton" sensitive="false"/>
          <module_component name="Connector" alpha="0." x1="1.6*mm" x2="1.6*mm" length="34.*mm" thickness="0.15*mm" x_offset="0.*mm" y_offset="0.3*mm" z_offset="0.*mm" material="Al" vis="red" sensitive="false"/>
        </module>
      </ring>

      <ring id="1" r="144.*mm" nphi="36" z_offset="-3.5*mm" phi0="0." gap="0.6*mm" vis="invisible">
        <module name="PixelEndcapModule" vis="invisible">
          <module_component name="Sensor" alpha="0." x1="10.5*mm" x2="16.5*mm" length="34.*mm" thickness="0.125*mm" x_offset="0." y_offset="-0.03" z_offset="-5.*mm" material="Silicon" vis="Silicon" sensitive="true"/>
          <module_component name="Board" alpha="0." x1="10.5*mm" x2="16.5*mm" length="34.*mm" thickness="0.25*mm" x_offset="0." y_offset="0." z_offset="-5.*mm" material="Kapton" vis="Kapton" sensitive="false"/>
          <module_component name="Connector" alpha="0." x1="1.6*mm" x2="1.6*mm" length="34.*mm" thickness="0.15*mm" x_offset="0.*mm" y_offset="0.3*mm" z_offset="-5.*mm" material="Al" vis="red" sensitive="false"/>
        </module>
      </ring>
      <ring_support rmin="36.*mm" rmax="176.*mm" dz="2*mm" material="CarbonFiber" vis="CarbonFiber"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="50.*mm" gap="2.6*mm" nphi="32" z_offset="-4.*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="70.*mm" gap="3.6*mm" nphi="32" z_offset="-4.*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="90.*mm" gap="4.5*mm" nphi="32" z_offset="-4.*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="120.*mm" gap="6.0*mm" nphi="32" z_offset="+6.1*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="145.*mm" gap="7.2*mm" nphi="32" z_offset="+6.1*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="170.*mm" gap="8.4*mm" nphi="32" z_offset="+4.*mm" material="Ti" vis="orange"/>
      <layer id="0" name="PixelEndcapN0" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-620.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="1" name="PixelEndcapN1" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-720.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="2" name="PixelEndcapN2" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-840.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="3" name="PixelEndcapN3" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-980.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="4" name="PixelEndcapN4" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-1120.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="5" name="PixelEndcapN5" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-1320.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="6" name="PixelEndcapN6" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="-1520.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <disk name="PixelEndplate" z_offset="-1950.*mm" rmin="40.*mm" rmax="189.*mm" dz="5*mm" material="CarbonFiber" vis="CarbonFiber">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </disk>
      <support name="InnerSupportRail" rmin="190.*mm" rmax="200.*mm" dz="10.*mm" material="CarbonFiber" z_offset="000.*mm" nsides="1" vis="CarbonFiber"/>
      <support name="OuterSupportRails" rmin="190.*mm" rmax="200.*mm" dz="10.*mm" material="CarbonFiber" z_offset="490.*mm" nsides="2" vis="CarbonFiber"/>
      <services>
        <cable_routing nphi="8" phi0="0." number="8" r="188.*mm" rmin="0.*mm" rmax="0.2*mm" z_offset="550.*mm" gap="5.*mm" material="Cu" vis="orange">
          <box dz="0.25*mm" material="CarbonFiber" vis="CarbonFiber"/>
        </cable_routing>
        <cooling_routing nphi="8" phi0="0.3926" number="1" r="188.*mm" rmin="1.0*mm" rmax="1.1*mm" z_offset="550.*mm" gap="5.*mm" material="Ti" vis="orange"/>
      </services>
    </detector>

    <!--Barrel-->
    <detector id="ODD_PixelBarrel_ID" name="PixelBarrel" type="ODDPixelBarrel" readout="PixelBarrelReadout" vis="invisible">
      <type_flags type="DetType_TRACKER + DetType_BARREL"/>
      <dimensions name="PixelBarrelShape" rmin="pix_env_rmin" rmax="pix_env_rmax" dz="pix_b_dz" z="0.*mm"/>
      <boundary_material surface="negative" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      <boundary_material surface="outer" binning="binPhi,binZ" bins0="mat_pix_barrel_bPhi" bins1="mat_pix_barrel_bZ"/>
      <boundary_material surface="positive" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      <module name="PixelBarrelModule" vis="invisible">
        <module_component name="Sensor" alpha="0." dx="16.8*mm" dy="72.*mm" dz="0.125*mm" x_offset="0." y_offset="0." z_offset="-1.8*mm" material="Silicon" vis="Silicon" sensitive="true"/>
        <module_component name="Board" alpha="0." dx="16*mm" dy="70*mm" dz="0.25*mm" x_offset="0." y_offset="0." z_offset="-1.6*mm" material="Kapton" vis="Kapton" sensitive="false"/>
        <module_component name="Connector" alpha="0." dx="3*mm" dy="60*mm" dz="0.15*mm" x_offset="-8.*mm" y_offset="0." z_offset="-1.35*mm" material="Al" vis="red" sensitive="false"/>
      </module>
      <stave name="PixelBarrelStave" nmodules="pix_b_sf_b_z" gap="0.5*mm" vis="invisible">
        <subtraction name="PixelBarrelStaveFoam" material="CarbonFoam" x_offset="0.*mm" y_offset="0.*mm" z_offset="0.6*mm" vis="CarbonFoam">
          <trd name="FoamStructure" x1="6.*mm" x2="1.*mm" thickness="2.*mm" dz="15.*mm"/>
          <tubs name="FoamCutout" rmin="0." rmax="1.2*mm" z_offset="0.*mm" dz="20.*mm"/>
        </subtraction>
        <tube name="CoolingPipe" rmin="1.0*mm" rmax="1.1*mm" dz="20.*mm" x_offset="0.*mm" y_offset="0.*mm" z_offset="0.5*mm" material="Ti" vis="orange" />
        <eltube name="CableBundle" rmin="0.0*mm" rmax="0.25*mm" dz="20.*mm" x_offset="-10.*mm" y_offset="0.*mm" z_offset="-0.2*mm" material="Cu" vis="orange" />
      </stave>
      <layer id="0" name="PixelLayer0" rmin="28.*mm" r="34.*mm" rmax="39.*mm" outer_z="20.*mm" nphi="pix_b0_sf_b_phi" phi_tilt="0.12" phi0="0." vis="invisible">
        <layer_material surface="outer" binning="binPhi,binZ" bins0="mat_pix_barrel_bPhi" bins1="mat_pix_barrel_bZ"/>
        <support name="SupportCylinder" rmin="37.*mm" rmax="39.*mm" dz="500.*mm" material="CarbonFiber" z_offset="0.*mm" nsides="1" vis="CarbonFiber"/>
      </layer>
      <layer id="1" name="PixelLayer1" rmin="65.*mm" r="70.*mm" rmax="77.*mm" outer_z="20.*mm" nphi="pix_b1_sf_b_phi" phi_tilt="0.12" phi0="0." vis="invisible">
        <layer_material surface="outer" binning="binPhi,binZ" bins0="mat_pix_barrel_bPhi" bins1="mat_pix_barrel_bZ"/>
        <support name="SupportCylinder" rmin="75.*mm" rmax="77.*mm" dz="500.*mm" material="CarbonFiber" z_offset="0.*mm" nsides="1" vis="CarbonFiber" />
      </layer>
      <layer id="2" name="PixelLayer2" rmin="100.*mm" r="116.*mm" rmax="126.*mm" outer_z="20.*mm" nphi="pix_b2_sf_b_phi" phi_tilt="0.12" phi0="0." vis="invisible">
        <layer_material surface="outer" binning="binPhi,binZ" bins0="mat_pix_barrel_bPhi" bins1="mat_pix_barrel_bZ"/>
        <support name="SupportCylinder" rmin="120.*mm" rmax="122.*mm" dz="500.*mm" material="CarbonFiber" z_offset="0.*mm" nsides="1" vis="CarbonFiber" />
      </layer>
      <layer id="3" name="PixelLayer3" rmin="160.*mm" r="172.*mm" rmax="182.*mm" outer_z="20.*mm" nphi="pix_b3_sf_b_phi" phi_tilt="0.12" phi0="0." vis="invisible">
        <layer_material surface="outer" binning="binPhi,binZ" bins0="mat_pix_barrel_bPhi" bins1="mat_pix_barrel_bZ"/>
        <support name="SupportCylinder" rmin="176.*mm" rmax="178.*mm" dz="500.*mm" material="CarbonFiber" z_offset="0.*mm" nsides="1" vis="CarbonFiber"/>
      </layer>
      <support name="OuterSupportRails" rmin="191.*mm" rmax="200.*mm" dz="10.*mm" material="CarbonFiber" z_offset="530.*mm" nsides="2" vis="CarbonFiber">
        <connector/>
      </support>
      <support name="InnerSupportRails" rmin="191.*mm" rmax="200.*mm" dz="10.*mm" material="CarbonFiber" z_offset="200.*mm" nsides="2" vis="CarbonFiber"/>
      <services>
        <cable_routing nphi="8" phi0="0." number="8" rmin="0.*mm" rmax="0.25*mm" z_offset="530.*mm" gap="5.*mm" material="Cu" vis="orange">
          <box dz="0.25*mm" material="CarbonFiber" vis="CarbonFiber"/>
        </cable_routing>
        <cable_routing nphi="16" phi0=".95" number="8" rmin="0.*mm" rmax="0.25*mm" z_offset="530.*mm" gap="5.*mm" material="Cu" vis="orange">
          <box dz="0.25*mm" material="CarbonFiber" vis="CarbonFiber"/>
        </cable_routing>
        <cooling_routing nphi="8" phi0="0.3926" number="1" rmin="1.0*mm" rmax="1.1*mm" z_offset="530.*mm" gap="5.*mm" material="Ti" vis="orange"/>
      </services>
    </detector>

    <!--EndcapP-->
    <detector id="ODD_PixelEndcapP_ID" name="PixelEndcapP" type="ODDPixelEndcap" readout="PixelEndcapReadout" vis="invisible">
      <type_flags type="DetType_TRACKER + DetType_ENDCAP"/>
      <dimensions name="PixelEndcapShape" rmin="pix_env_rmin" rmax="pix_env_rmax" dz="pix_e_dz" z="pix_e_pz"/>
      <ring id="0" r="76.*mm" nphi="24" z_offset="-3.5*mm" phi0="0." gap="0.6*mm" vis="invisible">
        <module name="PixelEndcapModule" vis="invisible">
          <module_component name="Connector" alpha="0." x1="1.6*mm" x2="1.6*mm" length="34.*mm" thickness="0.15*mm" x_offset="0.*mm" y_offset="-0.3*mm" z_offset="0.*mm" material="Al" vis="red" sensitive="false"/>
          <module_component name="Board" alpha="0." x1="8.5*mm" x2="14.5*mm" length="34.*mm" thickness="0.25*mm" x_offset="0." y_offset="0." z_offset="0.*mm" material="Kapton" vis="Kapton" sensitive="false"/>
          <module_component name="Sensor" alpha="0." x1="8.5*mm" x2="14.5*mm" length="34.*mm" thickness="0.125*mm" x_offset="0." y_offset="0.03" z_offset="0.*mm" material="Silicon" vis="Silicon" sensitive="true"/>
        </module>
      </ring>
      <ring id="1" r="144.*mm" nphi="36" z_offset="3.5*mm" phi0="0." gap="0.6*mm" vis="invisible">
        <module name="PixelEndcapModule" vis="invisible">
          <module_component name="Connector" alpha="0." x1="1.6*mm" x2="1.6*mm" length="34.*mm" thickness="0.15*mm" x_offset="0.*mm" y_offset="-0.3*mm" z_offset="-5.*mm" material="Al" vis="red" sensitive="false"/>
          <module_component name="Board" alpha="0." x1="10.5*mm" x2="16.5*mm" length="34.*mm" thickness="0.25*mm" x_offset="0." y_offset="0." z_offset="-5.*mm" material="Kapton" vis="Kapton" sensitive="false"/>
          <module_component name="Sensor" alpha="0." x1="10.5*mm" x2="16.5*mm" length="34.*mm" thickness="0.125*mm" x_offset="0." y_offset="0.03" z_offset="-5.*mm" material="Silicon" vis="Silicon" sensitive="true"/>
        </module>
      </ring>
      <ring_support rmin="36.*mm" rmax="176.*mm" dz="2*mm" material="CarbonFiber" vis="CarbonFiber"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="50.*mm" gap="2.6*mm" nphi="32" z_offset="4.*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="70.*mm" gap="3.6*mm" nphi="32" z_offset="4.*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="90.*mm" gap="4.5*mm" nphi="32" z_offset="4.*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="120.*mm" gap="6.0*mm" nphi="32" z_offset="-6.1*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="145.*mm" gap="7.2*mm" nphi="32" z_offset="-6.1*mm" material="Ti" vis="orange"/>
      <cooling_ring rmin="1.4*mm" rmax="1.6*mm" r="170.*mm" gap="8.4*mm" nphi="32" z_offset="-4.*mm" material="Ti" vis="orange"/>
      <layer id="0" name="PixelEndcapP0" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="620.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="1" name="PixelEndcapP1" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="720.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="2" name="PixelEndcapP2" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="840.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="3" name="PixelEndcapP3" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="980.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="4" name="PixelEndcapP4" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="1120.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="5" name="PixelEndcapP5" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="1320.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <layer id="6" name="PixelEndcapP6" rmin="28.*mm" rmax="186.*mm" dz="20.*mm" z_offset="1520.*mm" vis="invisible">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </layer>
      <disk name="PixelEndplate" z_offset="1950.*mm" rmin="40.*mm" rmax="189.*mm" dz="5*mm" material="CarbonFiber" vis="CarbonFiber">
        <surface_binning nr="pix_e_sf_b_r" nphi="pix_e_sf_b_phi"/>
        <layer_material surface="representing" binning="binPhi,binR" bins0="mat_pix_endcap_bPhi" bins1="mat_pix_endcap_bR"/>
      </disk>
      <support name="InnerSupportRail" rmin="190.*mm" rmax="200.*mm" dz="10.*mm" material="CarbonFiber" z_offset="000.*mm" nsides="1" vis="CarbonFiber"/>
      <support name="OuterSupportRails" rmin="190.*mm" rmax="200.*mm" dz="10.*mm" material="CarbonFiber" z_offset="490.*mm" nsides="2" vis="CarbonFiber"/>
      <services>
        <cable_routing nphi="8" phi0="0." number="8" r="188.*mm" rmin="0.*mm" rmax="0.2*mm" z_offset="550.*mm" gap="5.*mm" material="Cu" vis="orange">
          <box dz="0.25*mm" material="CarbonFiber" vis="CarbonFiber"/>
        </cable_routing>
        <cooling_routing nphi="8" phi0="0.3926" number="1" r="188.*mm" rmin="1.0*mm" rmax="1.1*mm" z_offset="550.*mm" gap="5.*mm" material="Ti" vis="orange"/>
      </services>
    </detector>

    <!--- support tube -->

    <detector id="ODD_PST_ID" name="PST" type="ODDCylinder" beampipe="false" vis="CarbonFiber">
      <type_flags type="DetType_TRACKER" />
      <tubs name="PixelSupportCylinder" rmin="pst_rmin" rmax="pst_rmax" dz="pst_length" material="CarbonFiber">
        <layer_material surface="representing" binning="binPhi,binZ" bins0="mat_pst_bPhi" bins1="mat_pst_bZ"/>
      </tubs>
    </detector>


  </detectors>

  <plugins>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="Pixels"/>
      <argument value="acts_container: bool = true"/>
      <argument value="acts_container_type: int = 3"/>
      <argument value="acts_container_bvalues_n: int = 3"/>
      <argument value="acts_container_bvalues_0: double = bp_rmax"/>
      <argument value="acts_container_bvalues_1: double = pst_rmax"/>
      <argument value="acts_container_bvalues_2: double = tracker_region_zmax"/>
      <argument value="acts_container_binning: str = z"/>
      <argument value="acts_portal_proto_material_2: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_2_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_z_n: int = pix_p_mat_b_z"/>
      <argument value="acts_portal_proto_material_2_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_phi_n: int = pix_p_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="PixelEndcapN"/>
      <argument value="layer_pattern: str=PixelEndcapN\d|PixelEndplate"/>
      <argument value="acts_container: bool = true"/>
      <argument value="acts_container_type: int = 3"/>
      <argument value="acts_container_bvalues_n: int = 3"/>
      <argument value="acts_container_bvalues_0: double = bp_rmax"/>
      <argument value="acts_container_bvalues_1: double = pst_rmax"/>
      <argument value="acts_container_bvalues_2: double = pix_e_dz"/>
      <argument value="acts_container_z: double = pix_e_nz"/>
      <argument value="acts_container_binning: str = z"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN0"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN1"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN2"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN3"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN4"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN5"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapN/PixelEndcapN6"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="PixelBarrel"/>
      <argument value="layer_pattern=PixelLayer\d"/>
      <argument value="acts_container: bool = true"/>
      <argument value="acts_container_type: int = 3"/>
      <argument value="acts_container_bvalues_n: int = 3"/>
      <argument value="acts_container_bvalues_0: double = bp_rmax"/>
      <argument value="acts_container_bvalues_1: double = pst_rmax"/>
      <argument value="acts_container_bvalues_2: double = pix_b_dz"/>
      <argument value="acts_container_binning: str = r"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_b_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_b_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_b_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_b_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelBarrel/PixelLayer0"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_b_sf_b"/>
      <argument value="acts_surface_binning_z_type: str = equidistant"/>
      <argument value="acts_surface_binning_z_autorange: bool = true"/>
      <argument value="acts_surface_binning_z_n: int = pix_b_sf_b_z"/>
      <argument value="acts_surface_binning_z_exp: int = pix_b_sf_e_z"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_b0_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_b_sf_e_phi"/>
      <argument value="acts_portal_proto_material_2: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_2_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_2_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_phi_n: int = pix_b_mat_b_phi"/>
      <argument value="acts_portal_proto_material_3: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_3_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_3_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_phi_n: int = pix_b_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelBarrel/PixelLayer1"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_b_sf_b"/>
      <argument value="acts_surface_binning_z_type: str = equidistant"/>
      <argument value="acts_surface_binning_z_autorange: bool = true"/>
      <argument value="acts_surface_binning_z_n: int = pix_b_sf_b_z"/>
      <argument value="acts_surface_binning_z_exp: int = pix_b_sf_e_z"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_b1_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_b_sf_e_phi"/>
      <argument value="acts_portal_proto_material_2: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_2_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_2_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_phi_n: int = pix_b_mat_b_phi"/>
      <argument value="acts_portal_proto_material_3: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_3_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_3_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_phi_n: int = pix_b_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelBarrel/PixelLayer2"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_b_sf_b"/>
      <argument value="acts_surface_binning_z_type: str = equidistant"/>
      <argument value="acts_surface_binning_z_autorange: bool = true"/>
      <argument value="acts_surface_binning_z_n: int = pix_b_sf_b_z"/>
      <argument value="acts_surface_binning_z_exp: int = pix_b_sf_e_z"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_b2_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_b_sf_e_phi"/>
      <argument value="acts_portal_proto_material_2: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_2_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_2_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_phi_n: int = pix_b_mat_b_phi"/>
      <argument value="acts_portal_proto_material_3: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_3_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_3_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_phi_n: int = pix_b_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelBarrel/PixelLayer3"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_b_sf_b"/>
      <argument value="acts_surface_binning_z_type: str = equidistant"/>
      <argument value="acts_surface_binning_z_autorange: bool = true"/>
      <argument value="acts_surface_binning_z_n: int = pix_b_sf_b_z"/>
      <argument value="acts_surface_binning_z_exp: int = pix_b_sf_e_z"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_b3_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_b_sf_e_phi"/>
      <argument value="acts_portal_proto_material_2: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_2_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_2_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_2_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_2_binning_phi_n: int = pix_b_mat_b_phi"/>
      <argument value="acts_portal_proto_material_3: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_3_binning_z_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_z_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_3_binning_z_n: int = pix_b_mat_b_z"/>
      <argument value="acts_portal_proto_material_3_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_3_binning_phi_n: int = pix_b_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="PixelEndcapP"/>
      <argument value="layer_pattern=PixelEndcapP\d|PixelEndplate"/>
      <argument value="acts_container: bool = true"/>
      <argument value="acts_container_type: int = 3"/>
      <argument value="acts_container_bvalues_n: int = 3"/>
      <argument value="acts_container_bvalues_0: double = bp_rmax"/>
      <argument value="acts_container_bvalues_1: double = pst_rmax"/>
      <argument value="acts_container_bvalues_2: double = pix_e_dz"/>
      <argument value="acts_container_z: double = pix_e_pz"/>
      <argument value="acts_container_binning: str = z"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP0"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP1"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP2"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP3"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP4"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP5"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="/world/OpenDataTracker/Pixels/PixelEndcapP/PixelEndcapP6"/>
      <argument value="acts_volume: bool = true"/>
      <argument value="acts_volume_type: int = 3"/>
      <argument value="acts_volume_internals: bool = true"/>
      <argument value="acts_volume_internals_type: str = layer"/>
      <argument value="acts_volume_internals_measure: str = z,r"/>
      <argument value="acts_volume_internals_clearance: double = pix_b_clear"/>
      <argument value="acts_surface_binning_dim: int = pix_e_sf_b"/>
      <argument value="acts_surface_binning_r_type: str = equidistant"/>
      <argument value="acts_surface_binning_r_autorange: bool = true"/>
      <argument value="acts_surface_binning_r_n: int = pix_e_sf_b_r"/>
      <argument value="acts_surface_binning_r_exp: int = pix_e_sf_e_r"/>
      <argument value="acts_surface_binning_phi_type: str = equidistant"/>
      <argument value="acts_surface_binning_phi_n: int = pix_e_sf_b_phi"/>
      <argument value="acts_surface_binning_phi_exp: int = pix_e_sf_e_phi"/>
      <argument value="acts_portal_proto_material_0: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_0_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_0_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_0_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_0_binning_phi_n: int = pix_e_mat_b_phi"/>
      <argument value="acts_portal_proto_material_1: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_dim: int = 2"/>
      <argument value="acts_portal_proto_material_1_binning_r_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_r_autorange: bool = true"/>
      <argument value="acts_portal_proto_material_1_binning_r_n: int = pix_e_mat_b_r"/>
      <argument value="acts_portal_proto_material_1_binning_phi_type: str = equidistant"/>
      <argument value="acts_portal_proto_material_1_binning_phi_n: int = pix_e_mat_b_phi"/>
    </plugin>
  </plugins>
</lccdd>
